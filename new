#!/bin/bash

if [[ -n $1 ]]; then
    DAY=$1
else
    DAY=$(date '+%-d')
fi

if [[ -n $2 ]]; then
    YEAR=$2
fi

if [[ ! -d bin ]]; then
    echo 'No bin directory!'
    exit
fi

for i in 1 2
do
    cat <<EOF > "bin/day$DAY-$i.pl"
#!/usr/bin/env perl
use Mojo::Base -strict;

use lib "../cheatsheet/lib";

# use Advent::Dijkstra;
# use Advent::Grid::Dense::Square;
# use Advent::Grid::Dense::Diagonal;
# use Advent::Grid::Sparse;
use Advent::Grid::Utils qw(get_grid d4 d8 d_diag);
use Advent::Utils::Input qw(get_grouped_lines get_ints get_lines get_nonempty_groups);
use Advent::Utils::Problem qw(submit);
use Advent::Utils::Transform qw(print_grid reverse_rows rotate_clockwise transpose);

use Array::Utils qw(:all);
use Data::Dumper;
use List::AllUtils qw(:all);
use Memoize;
use POSIX qw(ceil floor);

my \$file = defined \$ARGV[0] ? \$ARGV[0] : 'inputs/day$DAY';
\$file = "inputs/day$DAY-\$file" if \$file =~ /test/;
open(my \$fh, '<', \$file) or die \$!;
my \$total = 0;
while (<\$fh>) {
    chomp;
}

# my (\$grid, \$width, \$height) = get_grid(\$fh);

if (\$file !~ /test/) {
    submit(\$total);
} else {
    say \$total;
}
EOF
chmod +x bin/day$DAY-$i.pl
done

if [[ ! -d inputs ]]; then
    echo 'No input directory!'
    exit
fi

if [[ -n $YEAR ]]; then
    aoc d -y $YEAR -d $DAY -I -i inputs/day$DAY
else
    aoc d -d $DAY -I -i inputs/day$DAY
fi

